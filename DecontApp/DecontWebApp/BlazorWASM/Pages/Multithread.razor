@page "/multithread"

@using BlazorWorker.BackgroundServiceFactory
@using BlazorWorker.Core

@inject IWorkerFactory workerFactory

<h3>Multithread</h3>

<p>Counting 1: @firstCount</p>
<p>Counting 2: @secondCount</p>

<button @onclick="Cliked">Start counting!</button>
<button @onclick="First">First</button>
<button @onclick="Second">Second</button>
<br/>
<button @onclick="() => {firstCount = 0; secondCount = 0;}">Reset</button>

@code {
	public int firstCount = 0;
	public int secondCount = 0;

	public async Task Cliked()
	{
		var worker1 = await workerFactory.CreateAsync();
		var worker2 = await workerFactory.CreateAsync();

		var service1 = await worker1.CreateBackgroundServiceAsync<ThreadTest>();
		var service2 = await worker2.CreateBackgroundServiceAsync<ThreadTest>();

		firstCount = await service1.RunAsync(s => s.Method(10));
		secondCount = await service2.RunAsync(s => s.Method(50));
	}

	public async Task First()
	{
		var worker = await workerFactory.CreateAsync();
		var service = await worker.CreateBackgroundServiceAsync<ThreadTest>();

		firstCount = await service.RunAsync(s => s.Method(10));
	}

	public async Task Second()
	{
		var worker = await workerFactory.CreateAsync();
		var service = await worker.CreateBackgroundServiceAsync<ThreadTest>();

		secondCount = await service.RunAsync(s => s.Method(50));
	}
}
