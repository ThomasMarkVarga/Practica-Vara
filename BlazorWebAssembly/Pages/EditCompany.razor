@page "/editcompany/{CIF}"
@inject IAPICallService APICallService
@inject NavigationManager NavigationManager

<h3>Edit @company.companyName</h3>

<EditForm Model="company" OnSubmit="HandleSubmit">
    <label>CIF:</label>
    <br>
    <InputText @bind-Value="company.companyCIF">@company.companyCIF</InputText>
    <br>

    <label>Name:</label>
    <br>
    <InputText @bind-Value="company.companyName">@company.companyName</InputText>
    <br>

    <label>Address:</label>
    <br>
    <InputText @bind-Value="company.companyAddress">@company.companyAddress</InputText>
    <br>

    <label>County:</label>
    <br>
    <InputText @bind-Value="company.companyCounty">@company.companyCounty</InputText>
    <br>

    <label>Phone:</label>
    <br>
    <InputText @bind-Value="company.companyPhone">@company.companyPhone</InputText>
    <br>
    <br>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

<Modal @ref = "confirmationModal"
       ShowCloseButton ="false"
       CloseOnEscape="false">
    <BodyTemplate>Company updated succesfully!</BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Primary" @onclick = "HideConfirmationModal">Ok</Button>
    </FooterTemplate>
</Modal>

<Modal @ref="errorModal"
       ShowCloseButton="false"
       CloseOnEscape="false">
    <BodyTemplate>An error ocured!</BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Primary" @onclick = "errorModal.HideAsync">Ok</Button>
    </FooterTemplate>
</Modal>

@code {
    [Parameter]
    public string CIF { get; set; }

    Company company = new Company();
    Modal confirmationModal;
    Modal errorModal;


    protected override async Task OnInitializedAsync()
    {
        company = await APICallService.GetCompany(CIF);
    }

    async Task HandleSubmit()
    {
        MessageObjectAPI response = await APICallService.UpdateCompany(CIF, company);
        if (response.status == StatusCode.OK)
            await confirmationModal.ShowAsync();
    }

    async Task HideConfirmationModal()
    {
        await confirmationModal.HideAsync();
        NavigationManager.NavigateTo("/companies");
    }
}
